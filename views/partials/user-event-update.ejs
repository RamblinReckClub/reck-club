<script>
    var events = <%- JSON.stringify(events) %>;
    var userEvents = <%- user.hasOwnProperty('events') ? JSON.stringify(user.events) : JSON.stringify([]) %>;
    var eventIds = events.map(function(item) {
        return item.id;
    });
    var userEventIds = userEvents.map(function(item) {
        return item.id;
    });
    console.log("Event List: " + events);
    console.log("Event ID List: " + eventIds);
    console.log("User Event List: " + userEvents);

    var newEvents = [];
    var removedEvents = [];
    // ENABLE ONCE YOU FIGURE OUT HOW TO DO ADD/SUBTRACT WITH EVENT IDS IN FIREBASE
    $('#submit-points-button').on('click', function(event) {
        event.preventDefault();

        console.log("FINAL New: " + JSON.stringify(newEvents));
        console.log("FINAL Removed: " + JSON.stringify(removedEvents));

        $.ajax({
            url: '/events/add-event',
            type: 'PUT',
            data: {
                newEvents: JSON.stringify(newEvents),
                removedEvents: JSON.stringify(removedEvents),
                points: <%= (user.hasOwnProperty('points') ? user.points : 0) %>
            },
            success: function(result) {
                console.log(result);
                window.location.reload(true);
            },
            failure: function(err) {
                console.log(err);
                alert(err);
            }
        });
    });

    $(document).ready(function() {
        console.log('jquery loaded');
        $('.event-checkbox').on('change', function(e) {
            // if not originally selected (verify with id existence in user.events) and now selected:
            // add newly-selected
            // else if originally selected (verify with id existence in user.events) and now deselected:
            // add newly-removed
            // else if not originally selected and current status is deselected:
            // do not add a class
            // else if originally selected and current status is selected:
            // do not add a class
            // else
            // do not add a class

            var newEventIdArr = newEvents.map(function(item) {
                return item.id;
            });

            var removedEventIdArr = removedEvents.map(function(item) {
                return item.id;
            });

            console.log('checking .event-checkbox status');
            var eventId = $(this).attr('aria-label');
            console.log(eventId + " changed checked status");

            var originallySelected = false;
            if (userEventIds.indexOf('' + eventId) !== -1) {
                originallySelected = true;
                console.log('user has event ' + eventId);
            }

            var currentlySelected = ($(this).is(':checked') === true);

            if (!originallySelected && currentlySelected) {
                console.log("adding event " + eventId);
                if (!newEventIdArr.includes('' + eventId)) {
                    $(this).addClass('newly-selected');
                    var ev = events[eventIds.indexOf('' + eventId)];
                    newEvents.push({
                        id: ev.id,
                        points: ev.points,
                        name: ev.name,
                        type: ev.type,
                        date: ev.date
                    });
                }
            } else if (originallySelected && !currentlySelected) {
                console.log("removing event " + eventId);
                if (!removedEventIdArr.includes('' + eventId)) {
                    $(this).addClass('newly-removed');
                    var ev = events[eventIds.indexOf('' + eventId)];
                    removedEvents.push({
                        id: ev.id,
                        points: ev.points,
                        name: ev.name,
                        type: ev.type,
                        date: ev.date
                    });
                }
            } else if (!originallySelected && !currentlySelected) {
                console.log("undoing add on event " + eventId);
                console.log("Old add: " + newEventIdArr)
                if (newEventIdArr.includes('' + eventId)) {
                    $(this).removeClass('newly-selected');
                    var index = newEventIdArr.indexOf('' + eventId);
                    if (index > -1) {
                        newEvents.splice(index, 1);
                    }
                }
                console.log("New add: " + newEventIdArr)
            } else if (originallySelected && currentlySelected) {
                console.log("undoing remove on event " + eventId);
                console.log("Old remove: " + removedEventIdArr);
                if (removedEventIdArr.includes('' + eventId)) {
                    $(this).removeClass('newly-removed');
                    var index = removedEventIdArr.indexOf('' + eventId);
                    if (index > -1) {
                        removedEvents.splice(index, 1);
                    }
                }
                console.log("New remove: " + removedEventIdArr)
            } else {
                console.log('NON-handled condition - curSelected: ' + currentlySelected + ' orgSelected: ' + originallySelected);
            }
            console.log("Updated New: " + JSON.stringify(newEvents));
            console.log("Updated Removed: " + JSON.stringify(removedEvents));
        });
    });
</script>